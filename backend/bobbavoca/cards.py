import openai


import sys
sys.path.append("/home/honglee0317/BobbaVoca/backend/config")
from my_settings import *

OPENAI_API_KEY =OPENAI_KEY


languages = {
                0: "한국어",
                1: "영어",
                2: "일본어",
                3: "중국어"
            }

def get_response(prompt):
    """OpenAI API를 사용하여 응답을 가져오는 함수"""
    client = openai.OpenAI(
        api_key=OPENAI_API_KEY
    )

    response = client.chat.completions.create(
        model="gpt-4-turbo",
        messages=[{
            "role": "user",
            "content": prompt,
        }]
    )

    answer = response.choices[0].message.content

    return answer

def get_words(category, description, age, language):
    prompt = f"""너는 최고의 아동 언어 교육 전문가야. {age}세 아동이 학습할 단어를 선정하는데, {category} 에 해당하면서, {description}이라는 특징을 가지는 단어들을 24개 생성해 줘. 단어들은 '/' 기호로 구분해 줘.
    응답에 다른 말은 포함시키지 말고 단어들과 구분자만 포함해서 답변해 주고, 실제 사전에 있는 단어로만 구성해 줘."""
    answer = get_response(prompt)
    return answer

def get_english_words(category, description, age):
    prompt = f"""You are the best children's language education expert. Generate 24 words for a {age}-year-old child to learn that belong to the category "{category}" and have the characteristic "{description}". Separate the words with a '/'.
    Please only include the words and the separators in the response. Each word must be within 10 characters."""
    answer = get_response(prompt)

    return answer


def get_foreign_word(word, language):
    if language == 0:
        return ""
    
    target = languages[language]
    prompt = f"""{word}를 {target}로 번역해 줘. 다른 말 말고 해당 {target}만 응답으로 정확하게 해 줘. 문장 형태 말고 단어만 대답해 줘."""
    answer = get_response(prompt)
    return answer

def get_korean_word(word):
    
    prompt = f"""{word}를 한국어로 번역해 줘. 다른 말 말고 해당 한국어 단어만 응답으로 정확하게 해 줘. 문장 형태 말고 단어만 대답해 줘."""
    answer = get_response(prompt)
    return answer



def get_image(example_sentence):
    #prompt = f"""Create a picture for a flashcard that a child would learn. The picture should be based on the sentence: "{example_sentence}". Do not include any text in the image."""
    prompt = f"""A simple picture which is based on following sentence: "{example_sentence}". The picture doesn't contain any text on it."""
    client = openai.OpenAI(api_key=OPENAI_API_KEY)
    response = client.images.generate(
        model="dall-e-3",
        prompt=prompt,
        size="1024x1024",
        quality="standard",
        n=1,
    )
    image_url = response.data[0].url
    return image_url

def get_example(word, word_list):
    prompt = f"""You are the best children's language education expert. Create a sentence containing the word '{word}' that is fun for children to learn.
    Please only include the sentence in the response, and keep it under 10 words. Here is a list of sentences already generated by the user. Please avoid generating similar sentences.
    {word_list}"""
    answer = get_response(prompt)
    return answer

def translate_sentence(sentence):
    
    prompt = f"""다음 문장을 한국어로 번역해 줘. 다른 말 말고 해당 한국어 문장만 응답으로 정확하게 해 줘. [{sentence}]"""
    answer = get_response(prompt)
    return answer

def translate_sentence_eng(sentence):
    
    prompt = f"""다음 문장을 영어로 번역해 줘. 다른 말 말고 해당 영어 문장만 응답으로 정확하게 해 줘. [{sentence}]"""
    answer = get_response(prompt)
    return answer

'''
def get_example(word, example_list):
    prompt = f"""너는 최고의 아동 언어 교육 전문가야. 아이가 단어를 즐겁게 공부할 수 있도록 '{word}'가 포함되도록 예문을 만들어 줘.
    응담에 다른 말은 포함시키지 말고 4단어 이하의 완성된 문장 형태로 한국어 문법에 맞게 존댓말 형태로 깔끔하게 답변해 줘. 단, 다음 예시문과 컨셉이 너무 겹치지 않게 해주고, 생성한 단어의 특성을
    반영할 수 있는 동사를 사용해 줘. 동사는 아이가 실생활에 사용할 수 있는 단어로 구체적으로 작성해줘.
    {example_list}"""
    answer = get_response(prompt)
    return answer
'''


if __name__ == "__main__":
    res = get_words('동물', '작고 귀여운 동물', 2, 1)
    words = res.split('/')
    
    print(get_image(words[0]))
    
    for word in words:
        example = get_example(word,[])
        
        print(example)